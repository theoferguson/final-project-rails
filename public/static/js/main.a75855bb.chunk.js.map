{"version":3,"sources":["Login.js","AboutUs.js","Categories.js","MarketCard.js","Listings.js","Marketplace.js","OfferingCard.js","MyOfferings.js","Settings.js","MyData.js","UserPage.js","Messages.js","Navbar.js","SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["Login","onLogin","useState","username","setUsername","password","setPassword","Header","as","color","textAlign","Form","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","user","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","type","value","onChange","target","Button","AboutUs","Categories","marketplace","handleFilter","activeIndex","setActiveIndex","handleClick","titleProps","index","originCity","Menu","secondary","vertical","map","item","offering","origin","filter","self","indexOf","city","Item","id","onClick","content","destinationCity","destination","truckload","some","full_truckload","less_than_truckload","Accordion","text","header","position","name","Title","active","Content","MarketCard","post","issueRequest","setIssueRequest","open","setOpen","message","setMessage","postUserId","Card","Meta","Description","destination_date","slice","origin_date","extra","Modal","centered","onClose","onOpen","trigger","basic","className","Field","user_id","post_id","Actions","Group","Or","positive","console","log","Listings","category","cardDisplay","Object","keys","length","key","values","Marketplace","setCategory","Grid","celled","Row","Column","width","OfferingCard","handlePost","handleRemovePost","removePost","find","email","MyOfferings","setUser","show","setShow","setOffering","offerings","allOfferings","setAllOfferings","useEffect","response","ok","cityOptions","handleChange","event","checked","_reactName","parentElement","innerText","dimmer","undefined","asking_price","htmlFor","Dropdown","options","search","selection","Settings","settings","setSettings","setChecked","capacity_provider","company","Checkbox","label","location","industry","disabled","MyData","UserPage","divided","Messages","myInbox","setMyInbox","myOutbox","setMyOutbox","messages","sender","compact","removeMessage","Navbar","onLogout","activeItem","setActiveItem","handleItemClick","pointing","Link","to","path","element","SignUp","onSignUp","passwordConfirmation","setPasswordConfirmation","password_confirmation","App","setMarketplace","style","height","verticalAlign","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a75855bb.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Button, Form, Header, Segment } from 'semantic-ui-react'\n\nfunction Login({ onLogin }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch(\"/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ username, password }),\n        })\n            .then((r) => r.json())\n            .then((user) => onLogin(user));\n    }\n\n    return (\n        <>\n            <Header as='h1' color='teal' textAlign='center'>\n                TRUCKING EXCHANGE NETWORK\n            </Header>\n            <Header as='h2' color='teal' textAlign='center'>\n                Log-in to an account\n            </Header>\n            <Form onSubmit={handleSubmit}>\n                <Segment stacked>\n                    <Form.Input\n                        fluid\n                        icon='user'\n                        iconPosition='left'\n                        placeholder='Username'\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <Button color='teal' fluid type=\"submit\">Login</Button>\n                </Segment>\n            </Form>\n        </>\n    );\n}\n\nexport default Login;","\nfunction AboutUs() {\n\n    return (\n        <div>about us</div>\n    )\n};\n\nexport default AboutUs;","import { Menu, Accordion } from 'semantic-ui-react';\nimport { useState } from 'react';\n\nfunction Categories({ marketplace, handleFilter }) {\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    function handleClick(e, titleProps) {\n        activeIndex === titleProps.index ? setActiveIndex(null) : setActiveIndex(titleProps.index)\n    };\n\n    const originCity = (\n        <Menu secondary fluid vertical>\n            {marketplace.map((item) => item.offering.origin)\n                .filter((value, index, self) => self.indexOf(value) === index)\n                .map((city) => {\n                    return (\n                        <Menu.Item key={city} id='origin' onClick={handleFilter} content={city} />\n                    )\n                })\n            }\n        </Menu>\n    );\n\n    const destinationCity = (\n        <Menu secondary fluid vertical>\n            {marketplace.map((item) => item.offering.destination)\n                .filter((value, index, self) => self.indexOf(value) === index)\n                .map((city) => {\n                    return (\n                        <Menu.Item key={city} id='destination' onClick={handleFilter} content={city} />\n                    )\n                })\n            }\n        </Menu>\n    );\n\n    const truckload = (\n        <Menu secondary fluid vertical>\n            {marketplace.some((item) => item.offering.full_truckload)\n                ?\n                <Menu.Item id='full_truckload' onClick={handleFilter} content='FTL' />\n                :\n                null}\n            {marketplace.some((item) => item.offering.less_than_truckload)\n                ?\n                <Menu.Item id='less_than_truckload' onClick={handleFilter} content='LTL' />\n                :\n                null}\n        </Menu>\n    );\n\n    function handleClear() {\n        setActiveIndex(null)\n        handleFilter('clear')\n    };\n\n\n    return (\n        <Accordion as={Menu} vertical >\n            <Menu text fluid>\n                <Menu.Item header>Filter by:</Menu.Item>\n                <Menu.Menu position='right'>\n                    <Menu.Item name='clear' onClick={handleClear} >clear</Menu.Item>\n                </Menu.Menu>\n            </Menu>\n\n            <Menu.Item>\n                <Accordion.Title\n                    active={activeIndex === 0}\n                    index={0}\n                    content='Origin City'\n                    onClick={handleClick}\n                />\n                <Accordion.Content active={activeIndex === 0} content={originCity} />\n            </Menu.Item>\n\n            <Menu.Item>\n                <Accordion.Title\n                    active={activeIndex === 1}\n                    index={1}\n                    content='Destination City'\n                    onClick={handleClick}\n                />\n                <Accordion.Content active={activeIndex === 1} content={destinationCity} />\n            </Menu.Item>\n            <Menu.Item>\n                <Accordion.Title\n                    active={activeIndex === 2}\n                    index={2}\n                    content='FTL LTL'\n                    onClick={handleClick}\n                />\n                <Accordion.Content active={activeIndex === 2} content={truckload} />\n            </Menu.Item>\n        </Accordion >\n    )\n};\n\nexport default Categories;","import { Card, Button, Modal, Form } from \"semantic-ui-react\";\nimport { useState } from \"react\";\n\nfunction MarketCard({ post, user, issueRequest, setIssueRequest }) {\n    const [open, setOpen] = useState(false)\n    const [message, setMessage] = useState({})\n\n    const postUserId = post.offering.user.id\n\n    function handleChange(e) {\n        setMessage({ user_id: postUserId, post_id: post.id, message: e.target.value })\n    };\n\n    function handleSubmit(e) {\n        console.log(message)\n        e.preventDefault();\n        fetch(`/messages`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                message\n            ),\n        })\n            .then((r) => r.json())\n            .then((json) => {\n                console.log(json)\n                setOpen(false)\n                setMessage({})\n                setIssueRequest(!issueRequest)\n            })\n    }\n\n    return (\n        <Card>\n            <Card.Content>\n                <Card.Header>{post.offering.name}</Card.Header>\n                <Card.Meta >{post.offering.user.username}</Card.Meta>\n                <Card.Description>\n                    <div><strong>Destination:</strong> {post.offering.destination}</div>\n                    <div><strong>Origin:</strong> {post.offering.origin}</div>\n                    <div><strong>Delivery Date:</strong> {post.offering.destination_date.slice(0, 10)}</div>\n                    <div><strong>Departure Date:</strong> {post.offering.origin_date.slice(0, 10)}</div>\n                    {post.offering.full_truckload ? <div><strong>Full Truckload Available</strong></div> : null}\n                    {post.offering.less_than_truckload ? <div><strong>Partial Truckload Available</strong></div> : null}\n                </Card.Description>\n                {postUserId === user.id ? null :\n                    <Card.Content extra>\n                        <Modal\n                            centered={false}\n                            open={open}\n                            onClose={() => setOpen(false)}\n                            onOpen={() => setOpen(true)}\n                            trigger={<Button basic fluid><i className=\"user icon\"></i>Contact User</Button>}\n                        >\n                            <Modal.Header>Write a message to this provider, include your contact details.</Modal.Header>\n                            <Modal.Content>\n                                <Form>\n                                    <Form.Field>\n                                        <label>\n                                            <Form.Input type=\"text\" name=\"message\" value={message.message} onChange={handleChange} />\n                                        </label>\n                                    </Form.Field>\n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button.Group>\n                                    <Button onClick={() => setOpen(false)}>Cancel</Button>\n                                    <Button.Or />\n                                    <Button positive onClick={handleSubmit}>Send</Button>\n                                </Button.Group>\n                            </Modal.Actions>\n                        </Modal>\n                    </Card.Content>}\n            </Card.Content>\n        </Card>\n    )\n};\n\nexport default MarketCard;","import { Card } from \"semantic-ui-react\";\nimport MarketCard from \"./MarketCard\";\n\nfunction Listings({ marketplace, user, category, issueRequest, setIssueRequest }) {\n\n    function cardDisplay(post) {\n        return (\n            <MarketCard\n                key={post.id}\n                post={post}\n                user={user}\n                issueRequest={issueRequest}\n                setIssueRequest={setIssueRequest}\n            />\n        )\n    };\n\n    function marketDisplay() {\n        if (Object.keys(category).length !== 0) {\n            return (\n                <Card.Group>\n                    {marketplace.map((post) => {\n                        const key = Object.keys(category)[0]\n                        const value = Object.values(category)[0]\n                        if (post.offering[key] === value) {\n                            return (\n                                cardDisplay(post)\n                            )\n                        }\n                    })}\n                </Card.Group>\n            )\n        } else {\n            return (\n                <Card.Group>\n                    {marketplace.map((post) => cardDisplay(post))}\n                </Card.Group>\n            )\n        }\n    };\n\n    return (\n        <>\n            <h3>Market Listings</h3>\n            {marketDisplay()}\n        </>\n    )\n};\n\nexport default Listings;","import Categories from \"./Categories\";\n// import Search from \"./Search\";\nimport Listings from \"./Listings\";\n// import NewsScroll from \"./NewsScroll\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useState } from \"react\";\n\nfunction Marketplace({ marketplace, user, issueRequest, setIssueRequest }) {\n    const [category, setCategory] = useState({})\n\n    function handleFilter(e, {content}='' ) {\n        if (e === 'clear') {\n            setCategory({})\n        } else if (content === 'LTL' || content === 'FTL') {\n            setCategory({[e.target.id]: true})\n        } else {\n            setCategory({[e.target.id]: content})\n        }\n    };\n\n    return (\n        <Grid celled>\n            <Grid.Row>\n                {/* <Grid.Column>\n                    <NewsScroll />\n                </Grid.Column> */}\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column width={5}>\n                    {/* <Search /> */}\n                    <Categories marketplace={marketplace} handleFilter={handleFilter} />\n                </Grid.Column>\n                <Grid.Column width={8}>\n                    <Listings marketplace={marketplace} user={user} category={category} issueRequest={issueRequest} setIssueRequest={setIssueRequest}/>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n};\n\nexport default Marketplace;","import { Button, Card } from \"semantic-ui-react\";\n\n\nfunction OfferingCard({ offering, marketplace, issueRequest, setIssueRequest }) {\n\n    function handlePost() {\n        console.log(offering)\n        fetch(\"/posts\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                offering\n            )\n        })\n            .then((r) => r.json())\n            .then((json) => {\n                // console.log(json)\n                setIssueRequest(!issueRequest)\n            })\n    };\n\n    function handleRemovePost() {\n        const removePost = marketplace.find((post) => post.offering.id === offering.id)\n        console.log(removePost.id)\n        fetch(`/posts/${removePost.id}`, {\n            method: 'DELETE'\n        }).then(setIssueRequest(!issueRequest))\n    };\n\n\n    function posted() {\n        if (marketplace.some((post) => post.offering.id === offering.id)) {\n            return (\n                <>\n                    <Card.Content>Posted to marketplace</Card.Content><Button className=\"post_button\" onClick={handleRemovePost} basic fluid color='red'>Remove from Marketplace</Button>\n                </>\n            )\n        } else if (offering.user.email) {\n            return (\n                <Button basic fluid color='teal' className=\"post_button\" onClick={handlePost} >Post offering</Button>\n            )\n        } else {\n            return (\n                <Card.Content>Update valid email to post to marketplace</Card.Content>\n            )\n        }\n    }\n\n    function removeOffering() {\n        if (marketplace.some((post) => post.offering.id === offering.id)) {\n            handleRemovePost()\n            fetch(`/offerings/${offering.id}`, {\n                method: 'DELETE'\n            }).then(setIssueRequest(!issueRequest))\n        } else {\n            fetch(`/offerings/${offering.id}`, {\n                method: 'DELETE'\n            }).then(setIssueRequest(!issueRequest))\n        }\n    }\n\n\n    return (\n        <Card >\n            <Card.Content>\n                <Card.Header>{offering.name}</Card.Header>\n                <Card.Meta>{offering.user.username}</Card.Meta>\n                <Card.Description>\n                    <div><strong>Destination:</strong> {offering.destination}</div>\n                    <div><strong>Origin:</strong> {offering.origin}</div>\n                    <div><strong>Delivery Date:</strong> {offering.destination_date.slice(0, 10)}</div>\n                    <div><strong>Departure Date:</strong> {offering.origin_date.slice(0, 10)}</div>\n                    {offering.full_truckload ? <div><strong>Full Truckload Available</strong></div> : null}\n                    {offering.less_than_truckload ? <div><strong>Partial Truckload Available</strong></div> : null}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content>\n                {posted()}\n                <Button onClick={() => removeOffering()} basic fluid color='red'>Delete Offering</Button>\n            </Card.Content>\n        </Card>\n    )\n};\n\nexport default OfferingCard;","import { Modal, Button, Form, Dropdown, Segment } from \"semantic-ui-react\";\nimport { useEffect, useState } from 'react';\nimport OfferingCard from './OfferingCard';\n\nfunction MyOfferings({ user, marketplace, setUser, issueRequest, setIssueRequest }) {\n    const [show, setShow] = useState(false);\n    const [offering, setOffering] = useState({});\n    const [allOfferings, setAllOfferings] = useState(user.offerings);\n\n    useEffect(() => {\n        fetch(\"/me/offerings\").then((response) => {\n            if (response.ok) {\n                response.json().then((offerings) => setAllOfferings(offerings));\n            }\n        });\n    }, [issueRequest]);\n\n    const cityOptions = [\n        { text: 'Montgomery, AL', value: 'Montgomery', key: 'AL' },\n        { text: 'Juneau, AK', value: 'Juneau', key: 'AK' },\n        { text: 'Phoenix, AZ', value: 'Phoenix', key: 'AZ' },\n        { text: 'Little Rock, AR', value: 'Little Rock', key: 'AR' },\n        { text: 'Sacramento, CA', value: 'Sacramento', key: 'CA' },\n        { text: 'Denver, CO', value: 'Denver', key: 'CO' },\n        { text: 'Hartford, CT', value: 'Hartford', key: 'CT' },\n        { text: 'Dover, DE', value: 'Dover', key: 'DE' },\n        { text: 'Tallahassee, FL', value: 'Tallahassee', key: 'FL' },\n        { text: 'Atlanta, GA', value: 'Atlanta', key: 'GA' },\n        { text: 'Honolulu, HI', value: 'Honolulu', key: 'HI' },\n        { text: 'Boise, ID', value: 'Boise', key: 'ID' },\n        { text: 'Springfield, IL', value: 'Springfield', key: 'IL' },\n        { text: 'Indianapolis, IN', value: 'Indianapolis', key: 'IN' },\n        { text: 'Des Moines, IA', value: 'Des Moines', key: 'IA' },\n        { text: 'Topeka, KS', value: 'Topeka', key: 'KS' },\n        { text: 'Frankfort, KY', value: 'Frankfort', key: 'KY' },\n        { text: 'Baton Rouge, LA', value: 'Baton Rouge', key: 'LA' },\n        { text: 'Augusta, ME', value: 'Augusta', key: 'ME' },\n        { text: 'Annapolis, MD', value: 'Annapolis', key: 'MD' },\n        { text: 'Boston, MA', value: 'Boston', key: 'MA' },\n        { text: 'Lansing, MI', value: 'Lansing', key: 'MI' },\n        { text: 'Saint Paul, MN', value: 'Saint Paul', key: 'MN' },\n        { text: 'Jackson, MS', value: 'Jackson', key: 'MS' },\n        { text: 'Jefferson City, MO', value: 'Jefferson City', key: 'MO' },\n        { text: 'Helena, MT', value: 'Helena', key: 'MT' },\n        { text: 'Lincoln, NE', value: 'Lincoln', key: 'NE' },\n        { text: 'Carson City, NV', value: 'Carson City', key: 'NV' },\n        { text: 'Concord, NH', value: 'Concord', key: 'NH' },\n        { text: 'Trenton, NJ', value: 'Trenton', key: 'NJ' },\n        { text: 'Santa Fe, NM', value: 'Santa Fe', key: 'NM' },\n        { text: 'Albany, NY', value: 'Albany', key: 'NY' },\n        { text: 'Raleigh, NC', value: 'Raleigh', key: 'NC' },\n        { text: 'Bismarck, ND', value: 'Bismarck', key: 'ND' },\n        { text: 'Columbus, OH', value: 'Columbus', key: 'OH' },\n        { text: 'Oklahoma City, OK', value: 'Oklahoma City', key: 'OK' },\n        { text: 'Salem, OR', value: 'Salem', key: 'OR' },\n        { text: 'Harrisburg, PA', value: 'Harrisburg', key: 'PA' },\n        { text: 'Providence, RI', value: 'Providence', key: 'RI' },\n        { text: 'Columbia, SC', value: 'Columbia', key: 'SC' },\n        { text: 'Pierre, SD', value: 'Pierre', key: 'SD' },\n        { text: 'Nashville, TN', value: 'Nashville', key: 'TN' },\n        { text: 'Austin, TX', value: 'Austin', key: 'TX' },\n        { text: 'Salt Lake City, UT', value: 'Salt Lake City', key: 'UT' },\n        { text: 'Montpelier, VT', value: 'Montpelier', key: 'VT' },\n        { text: 'Richmond, VA', value: 'Richmond', key: 'VA' },\n        { text: 'Olympia, WA', value: 'Olympia', key: 'WA' },\n        { text: 'Charleston, WV', value: 'Charleston', key: 'WV' },\n        { text: 'Madison, WI', value: 'Madison', key: 'WI' },\n        { text: 'Cheyenne, WY', value: 'Cheyenne', key: 'WY' }\n    ];\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch(`/offerings`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                offering\n            ),\n        })\n            .then((r) => r.json())\n            .then((json) => {\n                console.log(json)\n                setOffering({})\n                handleClose()\n                setIssueRequest(!issueRequest)\n            })\n    };\n\n    function handleChange(event) {\n        if (event.target.id === \"less_than_truckload\" || event.target.id === \"full_truckload\") {\n            setOffering({ ...offering, [event.target.name]: event.target.checked })\n        } else if (event._reactName === \"onClick\") {\n            setOffering({ ...offering, [event.target.parentElement.parentElement.id]: event.target.innerText })\n        } else {\n            setOffering({ ...offering, [event.target.name]: event.target.value })\n        }\n    };\n\n    useEffect(() => {\n        console.log(offering);\n    }, [offering]);\n\n    return (\n        <>\n            <Button basic fluid color='teal' onClick={handleShow}>\n                Add New Offering\n            </Button>\n\n            <Modal\n                dimmer={show ? \"blurring\" : undefined}\n                open={show}\n                onClose={() => setShow(false)}\n                centered\n            >\n                <Modal.Header>\n                    New offering:\n                </Modal.Header>\n                <Modal.Content>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Field>\n                            <label>\n                                Offering name:\n                                <Form.Input type=\"text\" name=\"name\" value={offering.name ? offering.name : ''} onChange={handleChange} />\n                            </label>\n                        </Form.Field>\n                        <Form.Field>\n                            <label>\n                                Asking Price (total $):\n                                <Form.Input type=\"text\" name=\"asking_price\" value={offering.asking_price ? offering.asking_price : ''} onChange={handleChange} />\n                            </label>\n                        </Form.Field>\n                        <Form.Field>\n                            <label htmlFor='less_than_truckload' >Less than truckload (LTL)?</label>\n                            <input type='checkbox' id=\"less_than_truckload\" name='less_than_truckload' value={offering.less_than_truckload ? offering.less_than_truckload : ''} onChange={handleChange} />\n                        </Form.Field>\n                        <Form.Field>\n                            <label htmlFor='full_truckload' >Full truckload (FTL)?</label>\n                            <input type='checkbox' id=\"full_truckload\" name='full_truckload' value={offering.full_truckload ? offering.full_truckload : ''} onChange={handleChange} />\n                        </Form.Field>\n                        <Form.Field>\n                            <label>\n                                Origin City:\n                            </label>\n                            <Dropdown\n                                options={cityOptions}\n                                placeholder={offering.origin ? offering.origin : 'origin'}\n                                search\n                                selection\n                                onChange={handleChange}\n                                id=\"origin\"\n                                value={offering.origin ? offering.origin : ''}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <label>\n                                Origin date:\n                                <Form.Input type=\"date\" name=\"origin_date\" value={offering.origin_date ? offering.origin_date : ''} onChange={handleChange} />\n                            </label>\n                        </Form.Field>\n                        <Form.Field>\n                            <label>\n                                Destination City:\n                            </label>\n                            <Dropdown\n                                options={cityOptions}\n                                placeholder={offering.destination ? offering.destination : 'destination'}\n                                search\n                                selection\n                                onChange={handleChange}\n                                id=\"destination\"\n                                value={offering.destination ? offering.destination : ''}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <label>\n                                Destination date:\n                                <Form.Input type=\"date\" name=\"destination_date\" value={offering.destination_date ? offering.destination_date : ''} onChange={handleChange} />\n                            </label>\n                        </Form.Field>\n                        <Modal.Actions>\n                            <Button type=\"submit\" value=\"Create new offering\" color='teal'>Submit Offering</Button>\n                        </Modal.Actions>\n                    </Form>\n                </Modal.Content>\n            </Modal>\n            <Segment>\n                <h3>Your Offerings</h3>\n                {allOfferings.map((offering) => {\n                    return (\n                        <OfferingCard\n                            key={offering.id}\n                            offering={offering}\n                            marketplace={marketplace}\n                            user={user}\n                            setUser={setUser}\n                            issueRequest={issueRequest}\n                            setIssueRequest={setIssueRequest}\n                        />\n                    )\n                })}\n            </Segment>\n        </>\n    )\n};\n\nexport default MyOfferings;","import { useState, useEffect } from 'react';\nimport { Form, Checkbox, Button } from 'semantic-ui-react'\n\n\nfunction Settings({ user, setUser }) {\n    const [settings, setSettings] = useState({});\n    const [checked, setChecked] = useState(false)\n\n    function handleChange(event) {\n        console.log(checked)\n        if (event === \"capacity_provider\") {\n            setSettings({ ...settings, capacity_provider: checked })\n        } else {\n            setSettings({ ...settings, [event.target.name]: event.target.value })\n        }\n    };\n\n    function toggle() {\n        setChecked(!checked)\n        handleChange(\"capacity_provider\")\n    };\n\n    // for testing:\n    useEffect(() => {\n        console.log(settings);\n    }, [settings]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch(`/users/${user.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(\n                settings\n            ),\n        })\n            .then((r) => r.json())\n            .then((json) => {\n                console.log(json)\n                setUser(json)\n                setSettings({})\n            })\n    };\n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Field>\n                <label>\n                    Name:\n                    <input type=\"text\" name=\"name\" value={settings.name || user.name || ''} onChange={handleChange} />\n                </label>\n            </Form.Field>\n            <Form.Field>\n                <label>\n                    Email:\n                    <input type=\"text\" name=\"email\" value={settings.email || user.email || ''} onChange={handleChange} />\n                </label>\n            </Form.Field>\n            {/* <Form.Field>\n                <label>\n                    Profile Picture:\n                    <input type=\"text\" name=\"picture\" value={settings.picture || user.picture || ''} onChange={handleChange} />\n                </label>\n                </Form.Field> */}\n            <Form.Field>\n                <label>\n                    Company:\n                    <input type=\"text\" name=\"company\" value={settings.company || user.company || ''} onChange={handleChange} />\n                </label>\n            </Form.Field>\n            <Form.Field>\n                <Checkbox label='Capacity provider?' name=\"capacity_provider\" onChange={toggle} checked={!checked} />\n            </Form.Field>\n            <Form.Field>\n                <label>\n                    Main Location:\n                    <input type=\"text\" name=\"location\" value={settings.location || user.location || ''} onChange={handleChange} />\n                </label>\n            </Form.Field>\n            <Form.Field>\n                <label>\n                    Main Industry:\n                    <input type=\"text\" name=\"industry\" value={settings.industry || user.industry || ''} onChange={handleChange} />\n                </label>\n            </Form.Field>\n            <Button disabled={Object.keys(settings).length !== 0 ? false : true} basic fluid color='teal' type=\"submit\">Save Settings</Button>\n        </Form>\n    )\n\n};\n\nexport default Settings;","function MyData() {\n\n    return (\n        <div>\n            Market data to come...\n        </div>\n    )\n};\n\nexport default MyData;","import MyOfferings from './MyOfferings';\nimport Settings from './Settings';\nimport MyData from './MyData';\nimport { Grid, Segment } from 'semantic-ui-react'\n\nfunction UserPage({ user, setUser, marketplace, setIssueRequest, issueRequest }) {\n\n    return (\n        <Grid divided>\n            <Grid.Column width={8}>\n                <Segment>\n                    <Settings user={user} setUser={setUser} />\n                </Segment>\n                <Segment>\n                    <MyData />\n                </Segment>\n            </Grid.Column>\n            <Grid.Column width={8}>\n                <MyOfferings user={user} marketplace={marketplace} setUser={setUser} issueRequest={issueRequest} setIssueRequest={setIssueRequest} />\n            </Grid.Column>\n        </Grid>\n    )\n};\n\nexport default UserPage;","import { useEffect, useState } from 'react';\nimport { Card, Button, Segment } from 'semantic-ui-react'\n\nfunction Messages() {\n    const [myInbox, setMyInbox] = useState([])\n    const [myOutbox, setMyOutbox] = useState([])\n\n    useEffect(() => {\n        fetch(\"/me/inbox\")\n            .then((r) => r.json())\n            .then((messages) => {\n                setMyInbox(messages)\n            });\n    }, []);\n\n\n    useEffect(() => {\n        fetch(\"/me/outbox\")\n            .then((r) => r.json())\n            .then((messages) => {\n                setMyOutbox(messages)\n            })\n    }, []);\n\n    function removeMessage(message) {\n        setMyOutbox(myOutbox.filter((item) => item !== message) )\n        fetch(`/messages/${message.id}`, {\n            method: 'DELETE'\n        })\n    };\n\n\n    return (\n        <>\n            <Segment>\n                <Card.Group>Inbox:\n                    {myInbox.map((message) => {\n                        console.log(message)\n                        return (\n                            <Card key={message.id}>\n                                <Card.Content>\n                                    <Card.Header content={`From: ${message.sender.username}`} />\n                                    <Card.Header content={`re: ${message.post.offering.name}`} />\n                                    <Card.Meta content={message.sender.name} />\n                                    <Card.Description content={message.message} />\n                                </Card.Content>\n                            </Card>\n                        )\n                    })}\n                </Card.Group>\n            </Segment>\n            <Segment>\n                <Card.Group>Outbox:\n                    {myOutbox.map((message) => {\n                        console.log(message)\n                        return (\n                            <Card key={message.id}>\n                                <Card.Content>\n                                    <Card.Header content={`To: ${message.user.name} (${message.user.username})`} />\n                                    <Card.Header content={`re: ${message.post.offering.name}`} />\n                                    <Card.Meta content={message.sender.name} />\n                                    <Segment>\n                                        <Card.Description content={message.message} />\n                                    </Segment>\n                                    <Card.Content extra>\n                                        <Button basic compact color='red' onClick={() => removeMessage(message)} >\n                                            Delete\n                                        </Button>\n                                    </Card.Content>\n                                </Card.Content>\n                            </Card>\n                        )\n                    })}\n                </Card.Group>\n            </Segment>\n        </>\n    )\n};\n\nexport default Messages;","import {\n    Routes,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport AboutUs from \"./AboutUs\";\nimport Marketplace from \"./Marketplace\";\nimport UserPage from \"./UserPage\";\nimport { Menu, Segment } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nimport Messages from \"./Messages\";\n\nfunction Navbar({ onLogout, user, setUser, marketplace, setIssueRequest, issueRequest }) {\n    const [activeItem, setActiveItem] = useState({ activeItem: 'userpage' })\n\n    function handleLogout() {\n        fetch(\"/logout\", {\n            method: \"DELETE\",\n        }).then(() => onLogout());\n    }\n\n    function handleItemClick(e, { name }) {\n        setActiveItem({ activeItem: name })\n    }\n\n    return (\n        <div>\n            <Menu pointing secondary>\n                    <Menu.Item as={Link} className=\"navigation\" to=\"/userpage\"\n                        name=\"User Page\"\n                        active={activeItem === 'userpage'}\n                        onClick={handleItemClick}\n                    />\n                    <Menu.Item as={Link} name=\"Marketplace\" className=\"navigation\" to=\"/marketplace\"\n                        active={activeItem === 'marketplace'}\n                        onClick={handleItemClick}\n                    />\n                    <Menu.Item as={Link} name=\"About Us\" className=\"navigation\" to=\"/about\"\n                        active={activeItem === 'about'}\n                        onClick={handleItemClick}\n                    />\n                <Menu.Menu position='right'>\n                    <Menu.Item as={Link} name=\"Messages\" className=\"navigation\" to=\"/messages\"\n                        active={activeItem === 'messages'}\n                        onClick={handleItemClick}>\n                        {user.messages.length !== 0 ? <i aria-hidden=\"true\" className=\"red envelope square icon\" ></i> : null}\n                        Messages\n                    </Menu.Item>\n                    <Menu.Item className=\"navigation\" onClick={handleLogout} name='Logout' />\n                </Menu.Menu>\n            </Menu>\n            <Segment>\n                <Routes>\n                    <Route path=\"/messages\" element={<Messages />} />\n                    <Route path=\"/about\" element={<AboutUs />} />\n                    <Route path=\"/marketplace\" element={<Marketplace marketplace={marketplace} user={user} issueRequest={issueRequest} setIssueRequest={setIssueRequest} />} />\n                    <Route path=\"/userpage\" element={<UserPage user={user} setUser={setUser} marketplace={marketplace} issueRequest={issueRequest} setIssueRequest={setIssueRequest} />} />\n                    <Route path=\"/\" element={<UserPage user={user} setUser={setUser} marketplace={marketplace} issueRequest={issueRequest} setIssueRequest={setIssueRequest} />} />\n                </Routes>\n            </Segment>\n        </div >\n    );\n}\n\nexport default Navbar;","import { useState } from 'react';\nimport { Button, Form, Header, Segment } from 'semantic-ui-react'\n\nfunction SignUp({ onSignUp }) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        fetch(\"/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username,\n                password,\n                password_confirmation: passwordConfirmation,\n            }),\n        })\n            .then((r) => r.json())\n            .then((user) => onSignUp(user));\n    }\n\n    return (\n        <>\n            <Header as='h2' color='teal' textAlign='center'>\n                Sign-up for an account\n            </Header>\n            <Form onSubmit={handleSubmit}>\n                <Segment stacked>\n                    <Form.Input\n                        fluid\n                        icon='user'\n                        iconPosition='left'\n                        placeholder='Username'\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type=\"password\"\n                        id=\"password_confirmation\"\n                        value={passwordConfirmation}\n                        onChange={(e) => setPasswordConfirmation(e.target.value)}\n                    />\n                    <Button color='teal' fluid type=\"submit\">Submit</Button>\n                </Segment>\n            </Form>\n        </>\n    );\n\n}\n\nexport default SignUp;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Login from './Login';\nimport Navbar from './Navbar';\nimport SignUp from './SignUp';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Grid } from 'semantic-ui-react'\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [issueRequest, setIssueRequest] = useState(false)\n  const [marketplace, setMarketplace] = useState([])\n\n  useEffect(() => {\n    fetch(\"/me\").then((response) => {\n      if (response.ok) {\n        response.json().then((user) => setUser(user));\n      }\n    });\n  }, [issueRequest]);\n\n  useEffect(() => {\n    fetch(\"/posts\")\n      .then((r) => r.json())\n      .then((json) => {\n        setMarketplace(json)\n      })\n  }, [issueRequest]);\n\n  function onLogin(user) {\n    if (user.username) {\n      setUser(user)\n      setIssueRequest(!issueRequest)\n    } else {\n      console.log(user)\n    }\n  };\n\n  function onSignUp(user) {\n    if (user.username) {\n      setUser(user)\n      setIssueRequest(!issueRequest)\n    } else {\n      console.log(user)\n    }\n  };\n\n  function onLogout() {\n    setUser(null)\n  };\n\n  if (user) {\n    return (\n      <Router>\n        <Navbar\n          onLogout={onLogout}\n          user={user}\n          setUser={setUser}\n          marketplace={marketplace}\n          issueRequest={issueRequest}\n          setIssueRequest={setIssueRequest}\n        />\n      </Router>\n    );\n  } else {\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Login onLogin={onLogin} />\n          <SignUp onSignUp={onSignUp} />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}